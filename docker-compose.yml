version: "3.8"

services:
    frontend:
        container_name: frontend
        image: staticfloat/nginx-certbot
        depends_on: 
            - backend
        ports: 
            - "80:80"
            - "443:443"
        environment: 
            - CERTBOT_EMAIL=${CERTBOT_EMAIL}
            - FQDN=${DOMAIN}
            - ENVSUBST_VARS=FQDN
        volumes:
            - "./frontend/data/nginx/log:/var/log/nginx"
            - "./frontend/nginx/nginx.conf:/etc/nginx/user.conf.d/nginx.conf:ro"
            - "./frontend/html/:/usr/share/nginx/html:ro"
            - "/etc/letsencrypt:/etc/letsencrypt:ro"
        restart: unless-stopped
        networks: 
            - backend

    backend:
        container_name: manager
        build: backend/
        depends_on: 
            - vpn0
            - vpn1
            - vpn2
        environment:
            - REGNUM=${VPN_NUM}
            - VPN0_PEER=${VPN0_PEER}
            - VPN1_PEER=${VPN1_PEER}
            - VPN2_PEER=${VPN2_PEER}
            - SSO_URL=${SSO_URL}
        restart: unless-stopped
        networks: 
            - backend
            - frontend
            - vpn

    vpn0:
        container_name: vpn0
        build: vpn/
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            - PEERS=${VPN0_PEER}
            - SERVERURL=${VPN0_IP}
        volumes:
            - ./data/vpn1/config:/config
        ports: 
            - ${VPN0_IP}:51820:51820/udp
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        restart: unless-stopped
        networks: 
            - vpn
    
    vpn1:
        container_name: vpn1
        build: vpn/
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            - PEERS=${VPN1_PEER}
            - SERVERURL=${VPN1_IP}
        volumes:
            - ./data/vpn2/config:/config
        ports: 
            - ${VPN1_IP}:51820:51820/udp
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        restart: unless-stopped
        networks: 
            - vpn
    
    vpn2:
        container_name: vpn2
        build: vpn/
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            - PEERS=${VPN2_PEER}
            - SERVERURL=${VPN2_IP}
        volumes:
            - ./data/vpn3/config:/config
        ports: 
            - ${VPN2_IP}:51820:51820/udp
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        restart: unless-stopped
        networks: 
            - vpn

networks: 
    backend:
        driver: bridge
    frontend:
        driver: bridge
    vpn:
        driver: bridge
volumes:
    letsencrypt:
